View(num_red)
View(num_red)
library(dplyr)
library(dplyr)
library(tidyr)
library(leaflet)
library(httr)
library(jsonlite)
library(data.table)
library(purrr)
library(fuzzyjoin)
library(tools)
library(ggplot2)
source("keys.R")
df <- read.csv(
"./data/Food_Establishment_Inspection_Data.csv",
stringsAsFactors = FALSE,
row.names=NULL
) %>% drop_na() %>%
mutate(
Inspection.Date = as.Date(Inspection.Date, format = "%m/%d/%Y")
) %>%
filter(Zip.Code == 98105, Inspection.Date > as.Date("2009-01-01")) %>%
mutate(
Grade = as.numeric(Grade),
Longitude = as.numeric(Longitude),
Latitude = as.numeric(Latitude),
Inspection.Score = as.numeric(Inspection.Score)
)
df_by_inspection <- df %>%
group_by(
Name, Longitude, Latitude,
Inspection_Serial_Num
) %>%
summarize(
"Inspection Score" = mean(Inspection.Score, na.rm = TRUE),
"Grade" = mean(Grade)
) %>%
group_by(Name, Longitude, Latitude) %>%
summarise(
"Mean Inspection Score" = mean(`Inspection Score`, na.rm = TRUE),
"Mean Grade" = mean(Grade)
) %>%
as_data_frame()
yelp <- read.csv("./data/yelp.csv", stringsAsFactors = FALSE)
colnames(yelp)
colnames(df_by_inspection)
df_merged <- df_by_inspection %>%
mutate(
Name = toTitleCase(tolower(Name))
) %>%
regex_inner_join(
yelp,
by = c(
Name = "name"
)
) %>%
select(-Name) %>%
rename(Name = name) %>% as.data.frame()
high_score <- df_merged %>%
filter(`Mean Inspection Score` > 5) %>%
select(rating) %>% pull()
low_score <- df_merged %>%
filter(`Mean Inspection Score` <= 5) %>%
select(rating) %>% pull()
test_result <- t.test(x = high_score, y = low_score, alternative = "less")
p_val <- test_result$p.value
hex_plot <- ggplot(df_merged, aes(`Mean Inspection Score`, rating)) +
geom_hex()
cor <- cor.test(
x = df_merged$`Mean Inspection Score`,
y = df_merged$rating,
method = "spearman"
)$estimate
df <- read.csv(
"./data/Food_Establishment_Inspection_Data.csv",
stringsAsFactors = FALSE,
row.names=NULL
) %>% drop_na() %>%
mutate(
Inspection.Date = as.Date(Inspection.Date, format = "%m/%d/%Y")
) %>%
filter(Zip.Code == 98105, Inspection.Date > as.Date("2009-01-01")) %>%
mutate(
Grade = as.numeric(Grade),
Longitude = as.numeric(Longitude),
Latitude = as.numeric(Latitude),
Inspection.Score = as.numeric(Inspection.Score)
)
df_by_inspection <- df %>%
group_by(
Name, Longitude, Latitude,
Inspection_Serial_Num
) %>%
summarize(
"Inspection Score" = mean(Inspection.Score, na.rm = TRUE),
"Grade" = mean(Grade)
) %>%
group_by(Name, Longitude, Latitude) %>%
summarise(
"Mean Inspection Score" = mean(`Inspection Score`, na.rm = TRUE),
"Mean Grade" = mean(Grade)
) %>%
as_data_frame()
yelp <- read.csv("./data/yelp.csv", stringsAsFactors = FALSE)
colnames(yelp)
colnames(df_by_inspection)
df_merged <- df_by_inspection %>%
mutate(
Name = toTitleCase(tolower(Name))
) %>%
regex_inner_join(
yelp,
by = c(
Name = "name"
)
) %>%
select(-Name) %>%
rename(Name = name) %>% as.data.frame()
library(dplyr)
library(tidyr)
library(leaflet)
library(httr)
library(jsonlite)
library(data.table)
install.packages("data.table")
install.packages("purrr")
install.packages("purrr")
library(purrr)
library(fuzzyjoin)
install.packages("fuzzyjoin")
#install.packages("fuzzyjoin")
library(fuzzyjoin)
install.packages("tools")
install.packages("tools")
install.packages("tools")
#install.packages("tools")
library(tools)
library(ggplot2)
source("keys.R")
df <- read.csv(
"./data/Food_Establishment_Inspection_Data.csv",
stringsAsFactors = FALSE,
row.names=NULL
) %>% drop_na() %>%
mutate(
Inspection.Date = as.Date(Inspection.Date, format = "%m/%d/%Y")
) %>%
filter(Zip.Code == 98105, Inspection.Date > as.Date("2009-01-01")) %>%
mutate(
Grade = as.numeric(Grade),
Longitude = as.numeric(Longitude),
Latitude = as.numeric(Latitude),
Inspection.Score = as.numeric(Inspection.Score)
)
library(dplyr)
library(tidyr)
df <- read.csv(
"./data/Food_Establishment_Inspection_Data.csv",
stringsAsFactors = FALSE,
row.names=NULL
) %>% drop_na() %>%
mutate(
Inspection.Date = as.Date(Inspection.Date, format = "%m/%d/%Y")
) %>%
filter(Zip.Code == 98105, Inspection.Date > as.Date("2009-01-01")) %>%
mutate(
Grade = as.numeric(Grade),
Longitude = as.numeric(Longitude),
Latitude = as.numeric(Latitude),
Inspection.Score = as.numeric(Inspection.Score)
)
df_by_inspection <- df %>%
group_by(
Name, Longitude, Latitude,
Inspection_Serial_Num
) %>%
summarize(
"Inspection Score" = mean(Inspection.Score, na.rm = TRUE),
"Grade" = mean(Grade)
) %>%
group_by(Name, Longitude, Latitude) %>%
summarise(
"Mean Inspection Score" = mean(`Inspection Score`, na.rm = TRUE),
"Mean Grade" = mean(Grade)
) %>%
as_data_frame()
yelp <- read.csv("./data/yelp.csv", stringsAsFactors = FALSE)
df_merged <- df_by_inspection %>%
mutate(
Name = toTitleCase(tolower(Name))
) %>%
regex_inner_join(
yelp,
by = c(
Name = "name"
)
) %>%
select(-Name) %>%
rename(Name = name) %>% as.data.frame()
source("ui.R")
source("Server.R")
source("analysis.R")
library(DT)
install.packages("DT")
library(DT)
library("shiny")
library("dplyr")
install.packages("shinythemes")
library("shinythemes")
library("DT")
install.packages("shinyWidgets")
library("shinyWidgets")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("violations.R")
install.packages("randomcoloR")
#install.packages("randomcoloR")
library(randomcoloR)
# Create Pie chart
red_pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
distinctColorPalette(28)
n <- 28
# Create Pie chart
red_pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
distinctColorPalette(n)
n <- 28
palette <- distinctColorPalette(n)
# Create Pie chart
red_pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
palette
# Create Pie chart
red_pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
red_pie
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_color_brewer()
pie
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_color_brewer(palette = "Greens")
pie
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_color_brewer(palette = "Set3")
pie
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = code, color = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
#scale_color_brewer(palette = "Set3")
pie
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = code, color = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_color_brewer(palette = "Set3")
pie
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = code, color = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Set3")
pie
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = code, color = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Paired")
pie
colorCount <- length(unique(num_red$code))
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = getPaletter(colorCount)))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
#scale_fill_brewer(palette = "Paired")
pie
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = getPalette(colorCount)))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
#scale_fill_brewer(palette = "Paired")
pie
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_manual(values = getPalette(colorCount))
colorCount = length(unique(num_red$code))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_manual(values = getPalette(colorCount))
#scale_fill_brewer(palette = "Paired")
pie
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_manual(values = colorRampPalette(brewer.pal(12, "Set1"))(colorCount))
#scale_fill_brewer(palette = "Paired")
pie
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(RColorBrewer)
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_manual(values = colorRampPalette(brewer.pal(28, "Set1"))(colorCount))
library(ggplot2)
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_manual(values = colorRampPalette(brewer.pal(28, "Set1"))(colorCount))
# Create Pie chart
pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
source("violations.R")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
num_blue <- df %>%
select(Violation.Description, Name, Violation.Type) %>%
filter(Violation.Type == "BLUE") %>%
mutate(code = substr(Violation.Description, 1, 4)) %>%
group_by(code) %>%
count() %>%
spread(
key = code,
value = n
) %>%
gather(
key = code,
value = num
)
View(num_blue)
blue_pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
runApp()
runApp()
blue_pie <- ggplot(num_red, aes(x = "", y = num, fill = code))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
blue_pie
runApp()
source("violations.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
num_codes <- df %>%
select(Violation.Description, Name, Violation.Type) %>%
filter(Violation.Type == input$violation_type)
num_codes <- df %>%
select(Violation.Description, Name, Violation.Type) %>%
filter(Violation.Type == "RED")
View(num_codes)
num_codes <- df %>%
select(Violation.Description, Name, Violation.Type) %>%
filter(Violation.Type == "RED") %>%
group_by(Violation.Description)
View(num_codes)
num <- unique(num_codes$Violation.Description)
View(num)
num <- as.data.frame(unique(num_codes$Violation.Description)) %>%
group_by(Violation.Description)
View(num)
num_codes <- df %>%
select(Violation.Description, Name, Violation.Type) %>%
filter(Violation.Type == "RED") %>%
arrange(Violation.Description)
num <- as.data.frame(unique(num_codes$Violation.Description)) %>%
arrange(Violation.Description)
num_codes <- df %>%
select(Violation.Description, Name, Violation.Type) %>%
filter(Violation.Type == "RED") %>%
group_by(Violation.Description)
num <- as.data.frame(unique(num_codes$Violation.Description)) %>%
arrange(Violation.Description)
num_codes <- df %>%
select(Violation.Description, Name, Violation.Type) %>%
filter(Violation.Type == "RED") %>%
group_by(Violation.Description) %>%
arrange(Violation.Description)
View(num_codes)
num_codes <- df %>%
select(Violation.Description, Name, Violation.Type) %>%
filter(Violation.Type == "RED") %>%
group_by(Violation.Description) %>%
count()
View(num_codes)
num_codes <- df %>%
select(Violation.Description, Name, Violation.Type) %>%
filter(Violation.Type == "RED") %>%
group_by(Violation.Description) %>%
count() %>%
rename("Number of Occurences" = n)
View(num_codes)
num_codes <- df %>%
select(Violation.Description, Name, Violation.Type) %>%
filter(Violation.Type == "RED") %>%
group_by(Violation.Description) %>%
count() %>%
rename("Number of Occurences" = n,
"Violation Code/Description" = Violation.Description)
View(num_codes)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
is.data.frame(n)
n <- as.data.frame(c(2, 3, 4, 5))
View(n)
n <- as.data.frame("num" = c(2, 3, 4, 5), "hi" = c("hi", "hi", "hi", "hi"))
View(n)
n <- as.data.frame(num = c(2, 3, 4, 5), hi = c("hi", "hi", "hi", "hi"))
View(n)
View(df)
scores <- df %>%
group_by(Inspection.Score) %>%
summarize(
"Max" = max(Inspection.Score)
)
View(scores)
scores <- df %>%
group_by(Inspection.Score) %>%
summarize(
"Mean" = mean(Inspection.Score)
)
View(scores)
scores <- df %>%
select(Name, Inspection.Score) %>%
spread(
key = Name,
value = Inspection.Score
)
View(scores)
scores <- df %>%
select(Name, Inspection.Score) %>%
spread(
key = Name,
value = Inspection.Score
)
scores <- df %>%
select(Name, Inspection.Score) %>%
group_by(Name) %>%
summarize(
mean_inspection = mean(Inspection.Score)
)
View(scores)
scores <- df %>%
select(Name, Inspection.Score) %>%
group_by(Name) %>%
summarize(
max_inspection = max(Inspection.Score),
min_inspection = min(Inspection.Score)
)
View(scores)
max_score <- scores$max_inspection
max_score <- scores$max_inspection
max_score
max_score <- max(scores$max_inspection)
max_score
df[["Inspection.Score"]]
max(df[["Inspection.Score"]])
max_score <- max(df[["Inspection.Score"]]) - min(df[["Inspection.Score"]])
max_score
runApp()
